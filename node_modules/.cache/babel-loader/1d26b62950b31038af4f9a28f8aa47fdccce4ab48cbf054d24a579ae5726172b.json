{"ast":null,"code":"var _jsxFileName = \"/Users/eliasboy/PycharmProjects/aiforlovefrontend/src/components/TrainAi2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './TrainAi2.css';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrainAi2() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.sub && decodedToken.sub.user_id) {\n        setUserId(decodedToken.sub.user_id);\n      } else {\n        console.error('user_id not found in token');\n      }\n    } else {\n      console.error('No token found');\n    }\n  }, []);\n  const handleSendMessage = async () => {\n    const userMessage = {\n      id: messages.length + 1,\n      sender: 'user',\n      text: newMessage\n    };\n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n\n    // Call backend API to get the response from the AI model\n    try {\n      const response = await axios.post(`${config.apiUrl}/openai`, {\n        prompt: newMessage\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log(\"Response from server:\", response.data); // Debugging log\n\n      const aiMessage = {\n        id: messages.length + 2,\n        sender: 'ai',\n        text: response.data.response\n      };\n      setMessages([...messages, userMessage, aiMessage]);\n    } catch (error) {\n      console.error('Error generating message:', error);\n\n      // Log the error response from the server for debugging\n      if (error.response) {\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"train-ai-2-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Train your AI 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start the conversation with a prompt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Enter your prompt...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainAi2, \"pvok9hM3MskJk2EaTCdIqRcvG8c=\");\n_c = TrainAi2;\nexport default TrainAi2;\nvar _c;\n$RefreshReg$(_c, \"TrainAi2\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","config","jsxDEV","_jsxDEV","TrainAi2","_s","messages","setMessages","newMessage","setNewMessage","userId","setUserId","token","localStorage","getItem","decodedToken","sub","user_id","console","error","handleSendMessage","userMessage","id","length","sender","text","response","post","apiUrl","prompt","headers","log","data","aiMessage","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/eliasboy/PycharmProjects/aiforlovefrontend/src/components/TrainAi2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './TrainAi2.css';\nimport config from './config';\n\nfunction TrainAi2() {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.sub && decodedToken.sub.user_id) {\n        setUserId(decodedToken.sub.user_id);\n      } else {\n        console.error('user_id not found in token');\n      }\n    } else {\n      console.error('No token found');\n    }\n  }, []);\n\n  const handleSendMessage = async () => {\n    const userMessage = { id: messages.length + 1, sender: 'user', text: newMessage };\n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n\n    // Call backend API to get the response from the AI model\n    try {\n      const response = await axios.post(`${config.apiUrl}/openai`, {\n        prompt: newMessage,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log(\"Response from server:\", response.data); // Debugging log\n\n      const aiMessage = { id: messages.length + 2, sender: 'ai', text: response.data.response };\n      setMessages([...messages, userMessage, aiMessage]);\n    } catch (error) {\n      console.error('Error generating message:', error);\n\n      // Log the error response from the server for debugging\n      if (error.response) {\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      }\n    }\n  };\n\n  return (\n    <div className=\"train-ai-2-container\">\n      <h2>Train your AI 2</h2>\n      <div className=\"messages\">\n        {messages.length === 0 ? (\n          <p>Start the conversation with a prompt...</p>\n        ) : (\n          messages.map(msg => (\n            <div key={msg.id} className={`message ${msg.sender}`}>\n              <p>{msg.text}</p>\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"new-message\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Enter your prompt...\"\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TrainAi2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}